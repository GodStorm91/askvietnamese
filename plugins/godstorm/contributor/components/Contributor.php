<?php namespace Godstorm\Contributor\Components;

use Cms\Classes\ComponentBase;
use RainLab\User\Models\User;
use GodStorm\Contributor\Models\Contributor as ContributorModel;

class Contributor extends ComponentBase
{
    /**
     * A collection of posts to display
     * @var Collection
     */
    public $contributors;

    public function componentDetails()
    {
        return [
            'name'        => 'contributor Component',
            'description' => 'No description provided yet...'
        ];
    }

    public function defineProperties()
    {
        return [];
    }

    public function onRun()
    {
//        parent::onRun(); // TODO: Change the autogenerated stub
        $this->teams = $this->page['teams'] = $this->listTeams();
        $this->contributors = $this->page['contributors'] = $this->listContributors();
        $this->bloggers = $this->page['bloggers'] = $this->listBloggers();
        $this->artists = $this->page['artists'] = $this->listArtists();
        $this->photographers = $this->page['photographers'] = $this->listPhotos();
        $this->supporters = $this->page['supporters'] = $this->listSupporters();
    }

    protected function listContributors()
    {
        $contributors = User::has("groups")->get();
        $contributors = $contributors->filter(function($val, $key){
            return count($val->groups()->where('user_group_id', 3)->get());
        });
        return $contributors;
    }
    protected function listTeams()
    {
        $contributors = User::has("groups")->get();
        $contributors = $contributors->filter(function($val, $key){
            return count($val->groups()->where('user_group_id', 4)->get());
        });
        return $contributors;
    }

    protected function listSupporters()
    {
        $contributors = User::has("groups")->get();
        $contributors = $contributors->filter(function($val, $key){
            return count($val->groups()->where('user_group_id', 5)->get());
        });
        return $contributors;
    }

    protected function listArtists()
    {
        $contributors = User::has("groups")->get();
        $contributors = $contributors->filter(function($val, $key){
            return count($val->groups()->where('user_group_id', 6)->get());
        });
        return $contributors;
    }

    protected function listPhotos()
    {
        $contributors = User::has("groups")->get();
        $contributors = $contributors->filter(function($val, $key){
            return count($val->groups()->where('user_group_id', 7)->get());
        });
        return $contributors;
    }

    protected function listBloggers()
    {
        $contributors = User::has("groups")->get();
        $contributors = $contributors->filter(function($val, $key){
            return count($val->groups()->where('user_group_id', 8)->get());
        });
        return $contributors;
    }
}
